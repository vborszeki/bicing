{"version":3,"sources":["Markers/Marker.js","Markers/Station.js","Markers/Bikes.js","Markers/StationMarker.js","Markers/LocationMarker.js","Markers/SearchResultMarker.js","Map/Map.js","Close.js","StationInfo.js","Search.js","LocationButton.js","SearchButton.js","Loader.js","TravelModeSelection.js","App/useStations.js","App/App.js","serviceWorker.js","index.js"],"names":["styles","station","color","opacity","zIndex","bike","location","search","selected","Marker","styled","div","_templateObject","props","size","type","Station","_ref","stationInfo","react_default","a","createElement","Markers_Marker","capacity","Bikes","mechanicalBikes","ebikes","StationMarker","setSelectedStation","style","useSpring","config","friction","tension","transform","from","web","onClick","Markers_Station","Markers_Bikes","LocationMarker","SearchResultMarker","Wrapper","Map_templateObject","mapOptions","mapStyles","disableDefaultUI","clickableIcons","gestureHandling","Map","center","zoom","stations","selectedStation","showLocation","searchLocation","lib_default","bootstrapURLKeys","key","secretKeys","apiKey","options","map","i","Markers_StationMarker","lat","lng","Markers_LocationMarker","Markers_SearchResultMarker","Close_templateObject","Close","onClose","Close_Wrapper","role","xmlns","viewBox","d","stroke","strokeWidth","vectorEffect","StationInfoWrapper","StationInfo_templateObject","Header","_templateObject2","StationName","h1","_templateObject3","StationDetail","_templateObject4","DirectionsButton","_templateObject5","StationInfo","setShowTravelModeSelection","name","src_Close","concat","availableDocks","Search_templateObject","CloseButtonWrapper","Search_templateObject2","Input","input","Search_templateObject3","List","ul","Search_templateObject4","ListItem","li","Search_templateObject5","Name","span","_templateObject6","Address","_templateObject7","NoSearchResult","_templateObject8","Search","setShowSearch","setSearchLocation","setZoom","_usePlacesAutocomplet","usePlacesAutocomplete","requestOptions","window","google","maps","LatLng","radius","debounce","value","_usePlacesAutocomplet2","suggestions","status","data","setValue","showAutocomplete","hasNoSearchResult","handleSelect","_ref2","description","Object","asyncToGenerator","regenerator_default","mark","_callee","geoCode","latLng","wrap","_context","prev","next","getGeocode","address","sent","getLatLng","t0","console","error","stop","Search_Wrapper","autoFocus","placeholder","onChange","e","target","suggestion","id","_suggestion$structure","structured_formatting","main_text","secondary_text","aria-label","LocationButton_templateObject","LocationButton","setLocation","setShowLocation","handleClick","_yield$getLocation","_yield$getLocation$co","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","apply","this","arguments","LocationButton_Wrapper","SearchButton_templateObject","SearchButton","SearchButton_Wrapper","animated","Loader_templateObject","Loader","Loader_Wrapper","TravelModeSelection_templateObject","TravelModeSelection_templateObject2","ButtonContainer","TravelModeSelection_templateObject3","Button","TravelModeSelection_templateObject4","spacer","TravelModeSelection","_ref$selectedStation","getUrl","mode","TravelModeSelection_Wrapper","TravelModeSelection_CloseButtonWrapper","href","useStations","_useState","useState","_useState2","slicedToArray","setStations","useEffect","getStations","stationInfoResponse","stationInfoData","stationStatusResponse","stationStatusData","stationStatus","stationData","fetch","json","station_id","lon","num_bikes_available_types","mechanical","ebike","num_docks_available","info","objectSpread2","find","filter","GlobalStyle","createGlobalStyle","App_templateObject","App","_useState3","_useState4","_useState5","_useState6","showSearch","_useState7","_useState8","showTravelModeSelection","_useState9","_useState10","setCenter","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","isLoading","length","src_Loader","Fragment","src_Map_Map","src_LocationButton","src_SearchButton","src_StationInfo","src_Search","src_TravelModeSelection","Boolean","hostname","match","ReactDOM","render","src_App_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fff4cf16.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst styles = {\n  station: { color: '#fa424c', opacity: 0.4, zIndex: 1 },\n  bike: { color: 'transparent', opacity: 1, zIndex: 0 },\n  location: { color: '#694ffe', opacity: 1, zIndex: 2 },\n  search: { color: '#1fbaf6' },\n  selected: { color: '#ffbe30' },\n};\n\nconst Marker = styled.div`\n  position: absolute;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  left: ${(props) => props.size / -2}px;\n  top: ${(props) => props.size / -2}px;\n  border: 1px solid\n    ${(props) => {\n      if (props.selected) {\n        return styles.selected.color;\n      } else if (props.type === 'search') {\n        return styles.search.color;\n      } else if (props.type === 'location') {\n        return styles.location.color;\n      } else {\n        return styles.station.color;\n      }\n    }}\n      \n  border-radius: ${(props) => props.size}px;\n  background-color: ${(props) =>\n    props.selected ? styles.selected.color : styles[props.type].color};\n  opacity: ${(props) => styles[props.type].opacity};\n  z-index: ${(props) => styles[props.type].zIndex};\n  cursor: pointer;\n`;\n\nexport default Marker;\n","import React from 'react';\nimport Marker from './Marker';\n\nconst Station = ({ stationInfo, selected }) => (\n  <Marker\n    type=\"station\"\n    size={stationInfo.capacity * 1.5}\n    selected={selected}\n  />\n);\n\nexport default Station;\n","import React from 'react';\nimport Marker from './Marker';\n\nconst Bikes = ({ stationInfo, selected }) => {\n  const hasBikes = stationInfo.mechanicalBikes + stationInfo.ebikes > 0;\n\n  return hasBikes ? (\n    <Marker\n      type=\"bike\"\n      size={(stationInfo.mechanicalBikes + stationInfo.ebikes) * 1.5}\n      selected={selected}\n    />\n  ) : null;\n};\n\nexport default Bikes;\n","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport Station from './Station';\nimport Bikes from './Bikes';\n\nconst StationMarker = ({ station, selected, setSelectedStation }) => {\n  const style = useSpring({\n    config: { friction: 3, tension: 200 },\n    transform: 'scale(1.1)',\n    from: { transform: 'scale(1)' },\n  });\n\n  return (\n    <animated.div\n      style={style}\n      onClick={() => {\n        setSelectedStation(station);\n      }}\n    >\n      <Station selected={selected} stationInfo={station} />\n      <Bikes selected={selected} stationInfo={station} />\n    </animated.div>\n  );\n};\n\nexport default StationMarker;\n","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport Marker from './Marker';\n\nconst LocationMarker = () => {\n  const style = useSpring({\n    config: { friction: 0, tension: 5 },\n    transform: 'scale(1.1)',\n    from: { transform: 'scale(1)' },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Marker type=\"location\" size=\"16\" />\n    </animated.div>\n  );\n};\n\nexport default LocationMarker;\n","import React from 'react';\nimport Marker from './Marker';\n\nconst SearchResultMarker = () => {\n  return <Marker type=\"search\" size=\"16\" />;\n};\n\nexport default SearchResultMarker;\n","import React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport styled from 'styled-components';\nimport secretKeys from '../secrets.json';\nimport mapStyles from './mapStyles.json';\nimport StationMarker from '../Markers/StationMarker';\nimport LocationMarker from '../Markers/LocationMarker';\nimport SearchResultMarker from '../Markers/SearchResultMarker';\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 100%;\n`;\n\nconst mapOptions = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  clickableIcons: false,\n  gestureHandling: 'greedy',\n};\n\nconst Map = ({\n  center,\n  zoom,\n  stations,\n  selectedStation,\n  setSelectedStation,\n  showLocation,\n  location,\n  searchLocation,\n}) => (\n  <Wrapper>\n    <GoogleMapReact\n      bootstrapURLKeys={{ key: secretKeys.apiKey }}\n      center={center}\n      zoom={zoom}\n      options={mapOptions}\n    >\n      {stations &&\n        stations.map((station, i) => (\n          <StationMarker\n            key={i}\n            station={station}\n            lat={station.lat}\n            lng={station.lng}\n            selected={station === selectedStation}\n            setSelectedStation={setSelectedStation}\n          />\n        ))}\n      {showLocation && <LocationMarker lat={location.lat} lng={location.lng} />}\n      {searchLocation && (\n        <SearchResultMarker lat={searchLocation.lat} lng={searchLocation.lng} />\n      )}\n    </GoogleMapReact>\n  </Wrapper>\n);\n\nexport default Map;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n`;\n\nconst Close = ({ onClose }) => (\n  <Wrapper onClick={onClose} role=\"button\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10 10\">\n      <path\n        d=\"M 0,0 L 10,10 M 10,0 L 0,10\"\n        stroke=\"#000\"\n        strokeWidth=\"1\"\n        vectorEffect=\"non-scaling-stroke\"\n      />\n    </svg>\n  </Wrapper>\n);\n\nexport default Close;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Close from './Close';\n\nconst StationInfoWrapper = styled.div`\n  width: calc(100vw - 40px);\n  padding: 20px;\n  font-size: 16px;\n  position: absolute;\n  bottom: 0;\n  background-color: #fff;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: top;\n`;\n\nconst StationName = styled.h1`\n  font-size: 16px;\n  margin-top: 0;\n`;\n\nconst StationDetail = styled.div`\n  font-weight: 100;\n`;\n\nconst DirectionsButton = styled.a`\n  text-transform: uppercase;\n  float: right;\n  color: #00d390;\n  cursor: pointer;\n`;\n\nconst StationInfo = ({\n  selectedStation,\n  setSelectedStation,\n  setShowTravelModeSelection,\n}) => (\n  <StationInfoWrapper>\n    <Header>\n      <StationName>{selectedStation.name}</StationName>\n      <Close onClose={() => setSelectedStation(null)} />\n    </Header>\n    <StationDetail>{`🔧 mechanical: ${selectedStation.mechanicalBikes}`}</StationDetail>\n    <StationDetail>{`⚡️ electric: ${selectedStation.ebikes}`}</StationDetail>\n    <StationDetail>{`🆓 spaces: ${selectedStation.availableDocks}`}</StationDetail>\n    <DirectionsButton\n      onClick={() => setShowTravelModeSelection(true)}\n      role=\"button\"\n    >\n      directions\n    </DirectionsButton>\n  </StationInfoWrapper>\n);\n\nexport default StationInfo;\n","import React from 'react';\nimport styled from 'styled-components';\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from 'use-places-autocomplete';\nimport Close from './Close';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #fff;\n`;\n\nconst CloseButtonWrapper = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n`;\n\nconst Input = styled.input`\n  font-family: 'Roboto', sans-serif;\n  font-size: 40px;\n  margin-top: 52px;\n  margin-left: 40px;\n  outline: none;\n  border: none;\n  caret-color: #000;\n}\n`;\n\nconst List = styled.ul`\n  list-style-type: none;\n`;\n\nconst ListItem = styled.li`\n  margin-bottom: 16px;\n  cursor: pointer;\n`;\n\nconst Name = styled.span`\n  font-weight: 400;\n`;\n\nconst Address = styled.span`\n  font-weight: 100;\n`;\n\nconst NoSearchResult = styled.div`\n  font-size: 40px;\n  display: flex;\n  justify-content: center;\n  margin-top: 52px;\n`;\n\nconst Search = ({ setShowSearch, setSearchLocation, setZoom }) => {\n  const {\n    value,\n    suggestions: { status, data },\n    setValue,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: new window.google.maps.LatLng({ lat: 41.39, lng: 2.17 }),\n      radius: 5000,\n    },\n    debounce: 300,\n  });\n  const showAutocomplete = status === 'OK';\n  const hasNoSearchResult = status === 'ZERO_RESULTS';\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = ({ description }) => async () => {\n    try {\n      const geoCode = await getGeocode({ address: description });\n      const latLng = await getLatLng(geoCode[0]);\n      const { lat, lng } = latLng;\n\n      setSearchLocation({ lat, lng });\n      setShowSearch(false);\n      setZoom(17);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <CloseButtonWrapper>\n        <Close onClose={() => setShowSearch(false)} />\n      </CloseButtonWrapper>\n      <Input\n        type=\"text\"\n        autoFocus\n        placeholder=\"search places\"\n        value={value}\n        onChange={handleChange}\n      />\n      {showAutocomplete && (\n        <List>\n          {data.map((suggestion) => {\n            const {\n              id,\n              structured_formatting: {\n                main_text: name,\n                secondary_text: address,\n              },\n            } = suggestion;\n\n            return (\n              <ListItem key={id} onClick={handleSelect(suggestion)}>\n                <Name>{name}</Name> <Address>{address}</Address>\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n      {hasNoSearchResult && (\n        <NoSearchResult>\n          <span role=\"img\" aria-label=\"crying cat face\">\n            😿\n          </span>\n        </NoSearchResult>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fff;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 20px;\n  right: 20px;\n  cursor: pointer;\n`;\n\nconst LocationButton = ({ setLocation, setZoom, setShowLocation }) => {\n  const getLocation = () =>\n    new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n\n  const handleClick = async () => {\n    try {\n      const {\n        coords: { latitude: lat, longitude: lng },\n      } = await getLocation();\n      const location = { lat, lng };\n\n      setLocation(location);\n      setZoom(17);\n      setShowLocation(true);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Wrapper onClick={handleClick} role=\"button\">\n      <span role=\"img\" aria-label=\"locate\">\n        📌\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default LocationButton;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fff;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 80px;\n  right: 20px;\n  cursor: pointer;\n`;\n\nconst SearchButton = ({ setShowSearch }) => {\n  return (\n    <Wrapper role=\"button\" onClick={() => setShowSearch(true)}>\n      <span role=\"img\" aria-label=\"search\">\n        🔍\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default SearchButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSpring, animated } from 'react-spring';\n\nconst Wrapper = styled(animated.div)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  font-size: 60px;\n`;\n\nconst Loader = () => {\n  const style = useSpring({\n    config: { friction: 0, tension: 5 },\n    opacity: 0.5,\n    from: { opacity: 1 },\n  });\n\n  return (\n    <Wrapper style={style}>\n      <span role=\"img\" aria-label=\"bike\">\n        🚲\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Close from './Close';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #fff;\n`;\n\nconst CloseButtonWrapper = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n`;\n\nconst ButtonContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Button = styled.a`\n  font-size: 60px;\n  margin-right: ${(props) => (props.spacer ? '52px' : '0')};\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nconst TravelModeSelection = ({\n  selectedStation: { lat, lng },\n  setShowTravelModeSelection,\n}) => {\n  const getUrl = (mode) =>\n    `https://www.google.com/maps/dir/?api=1&destination=${lat}%2C${lng}&travelmode=${mode}`;\n\n  return (\n    <Wrapper>\n      <CloseButtonWrapper>\n        <Close onClose={() => setShowTravelModeSelection(false)} />\n      </CloseButtonWrapper>\n      <ButtonContainer>\n        <Button href={getUrl('walking')} spacer>\n          <span role=\"img\" aria-label=\"walking\">\n            🚶🏻‍♂\n          </span>\n        </Button>\n        <Button href={getUrl('bicycling')}>\n          <span role=\"img\" aria-label=\"biking\">\n            🚴🏻‍♂️\n          </span>\n        </Button>\n      </ButtonContainer>\n    </Wrapper>\n  );\n};\n\nexport default TravelModeSelection;\n","import { useState, useEffect } from 'react';\n\nconst useStations = () => {\n  const [stations, setStations] = useState([]);\n\n  useEffect(() => {\n    getStations();\n  }, []);\n\n  const getStations = async () => {\n    try {\n      const stationInfoResponse = await fetch(\n        'https://api.bsmsa.eu/ext/api/bsm/gbfs/v2/en/station_information'\n      );\n      const stationInfoData = await stationInfoResponse.json();\n      const stationInfo = stationInfoData.data.stations.map((station) => ({\n        id: station.station_id,\n        name: station.name,\n        lat: station.lat,\n        lng: station.lon,\n        capacity: station.capacity,\n      }));\n\n      const stationStatusResponse = await fetch(\n        'https://api.bsmsa.eu/ext/api/bsm/gbfs/v2/en/station_status'\n      );\n      const stationStatusData = await stationStatusResponse.json();\n      const stationStatus = stationStatusData.data.stations.map((station) => ({\n        id: station.station_id,\n        mechanicalBikes: station.num_bikes_available_types.mechanical,\n        ebikes: station.num_bikes_available_types.ebike,\n        availableDocks: station.num_docks_available,\n        status: station.status,\n      }));\n\n      const stationData = stationInfo\n        .map((info) => ({\n          ...stationStatus.find((status) => status.id === info.id),\n          ...info,\n        }))\n        .filter((station) => station.status === 'IN_SERVICE');\n\n      setStations(stationData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return stations;\n};\n\nexport default useStations;\n","import React, { useState, useEffect } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Map from '../Map/Map';\nimport StationInfo from '../StationInfo';\nimport Search from '../Search';\nimport LocationButton from '../LocationButton';\nimport SearchButton from '../SearchButton';\nimport Loader from '../Loader';\nimport TravelModeSelection from '../TravelModeSelection';\nimport useStations from './useStations';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: 'Roboto', sans-serif;\n  }\n`;\n\nconst App = () => {\n  const stations = useStations();\n  const [selectedStation, setSelectedStation] = useState(null);\n  const [showLocation, setShowLocation] = useState(false);\n  const [showSearch, setShowSearch] = useState(false);\n  const [showTravelModeSelection, setShowTravelModeSelection] = useState(false);\n  const [center, setCenter] = useState({\n    lat: 41.39,\n    lng: 2.17,\n  });\n  const [location, setLocation] = useState(null);\n  const [searchLocation, setSearchLocation] = useState(null);\n  const [zoom, setZoom] = useState(13.5);\n  const isLoading = stations.length === 0;\n\n  useEffect(() => {\n    if (location) {\n      setCenter(location);\n    }\n  }, [location]);\n\n  useEffect(() => {\n    if (searchLocation) {\n      setCenter(searchLocation);\n    }\n  }, [searchLocation]);\n\n  if (isLoading) return <Loader />;\n\n  return (\n    <>\n      <Map\n        stations={stations}\n        selectedStation={selectedStation}\n        setSelectedStation={setSelectedStation}\n        center={center}\n        zoom={zoom}\n        showLocation={showLocation}\n        location={location}\n        searchLocation={searchLocation}\n      />\n      <LocationButton\n        setLocation={setLocation}\n        setZoom={setZoom}\n        setShowLocation={setShowLocation}\n      />\n      <SearchButton setShowSearch={setShowSearch} />\n      {selectedStation && (\n        <StationInfo\n          selectedStation={selectedStation}\n          setSelectedStation={setSelectedStation}\n          setShowTravelModeSelection={setShowTravelModeSelection}\n        />\n      )}\n      {showSearch && (\n        <Search\n          setShowSearch={setShowSearch}\n          setSearchLocation={setSearchLocation}\n          setZoom={setZoom}\n        />\n      )}\n      {showTravelModeSelection && (\n        <TravelModeSelection\n          selectedStation={selectedStation}\n          setShowTravelModeSelection={setShowTravelModeSelection}\n        />\n      )}\n      <GlobalStyle />\n    </>\n  );\n};\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}