{"version":3,"sources":["Markers/Marker.js","Markers/Station.js","Markers/Bikes.js","Markers/StationMarker.js","Markers/LocationMarker.js","Markers/SearchResultMarker.js","Map/Map.js","Close.js","StationInfo.js","Search.js","LocationButton.js","SearchButton.js","BikeTypeToggle.js","Loader.js","TravelModeSelection.js","App/useStations.js","App/App.js","serviceWorker.js","index.js"],"names":["styles","station","color","opacity","zIndex","bike","location","search","selected","Marker","styled","div","props","size","type","Station","stationInfo","showElectricBikes","ebikes","capacity","Bikes","numberOfBikes","mechanicalBikes","StationMarker","setSelectedStation","style","useSpring","config","friction","tension","transform","from","onClick","LocationMarker","SearchResultMarker","Wrapper","mapOptions","mapStyles","disableDefaultUI","clickableIcons","gestureHandling","Map","center","zoom","stations","selectedStation","showLocation","searchLocation","bootstrapURLKeys","key","secretKeys","apiKey","options","map","i","lat","lng","Close","onClose","role","xmlns","viewBox","d","stroke","strokeWidth","vectorEffect","StationInfoWrapper","Header","StationName","h1","StationDetail","DirectionsButton","a","StationInfo","setShowTravelModeSelection","name","availableDocks","CloseButtonWrapper","Input","input","List","ul","ListItem","li","Name","span","Address","NoSearchResult","Search","setShowSearch","setSearchLocation","setZoom","usePlacesAutocomplete","requestOptions","window","google","maps","LatLng","radius","debounce","value","suggestions","status","data","setValue","showAutocomplete","hasNoSearchResult","handleSelect","description","getGeocode","address","geoCode","getLatLng","latLng","console","error","autoFocus","placeholder","onChange","e","target","suggestion","id","structured_formatting","main_text","secondary_text","aria-label","LocationButton","setLocation","setShowLocation","handleClick","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","SearchButton","MechanicalBikeWrapper","ElectricBikeWrapper","BikeTypeToggle","setShowElectricBikes","MechanicalBikeIcon","ElectricBikeIcon","animated","Loader","ButtonContainer","Button","spacer","TravelModeSelection","getUrl","mode","href","useStations","useState","setStations","useEffect","getStations","fetch","stationInfoResponse","json","stationInfoData","station_id","lon","stationStatusResponse","stationStatusData","stationStatus","num_bikes_available_types","mechanical","ebike","num_docks_available","num_bikes_available","stationData","info","find","filter","GlobalStyle","createGlobalStyle","App","showSearch","showTravelModeSelection","setCenter","isLoading","length","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.863db938.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst styles = {\n  station: { color: '#fa424c', opacity: 0.4, zIndex: 1 },\n  bike: { color: 'transparent', opacity: 1, zIndex: 0 },\n  location: { color: '#694ffe', opacity: 1, zIndex: 2 },\n  search: { color: '#1fbaf6' },\n  selected: { color: '#ffbe30' }\n};\n\nconst Marker = styled.div`\n  position: absolute;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  left: ${props => props.size / -2}px;\n  top: ${props => props.size / -2}px;\n  border: 1px solid\n    ${props => {\n      if (props.selected) {\n        return styles.selected.color;\n      } else if (props.type === 'search') {\n        return styles.search.color;\n      } else if (props.type === 'location') {\n        return styles.location.color;\n      } else {\n        return styles.station.color;\n      }\n    }};\n  border-radius: 50%;\n  background-color: ${props =>\n    props.selected ? styles.selected.color : styles[props.type].color};\n  opacity: ${props => styles[props.type].opacity};\n  z-index: ${props => styles[props.type].zIndex};\n  cursor: pointer;\n`;\n\nexport default Marker;\n","import Marker from './Marker';\n\nconst Station = ({ stationInfo, selected, showElectricBikes }) => {\n  const showStation =\n    !showElectricBikes || (showElectricBikes && stationInfo.ebikes > 0);\n\n  if (!showStation) return null;\n\n  return (\n    <Marker\n      type=\"station\"\n      size={stationInfo.capacity * 1.5}\n      selected={selected}\n    />\n  );\n};\n\nexport default Station;\n","import Marker from './Marker';\n\nconst Bikes = ({ stationInfo, selected, showElectricBikes }) => {\n  const numberOfBikes = showElectricBikes\n    ? stationInfo.ebikes\n    : stationInfo.mechanicalBikes + stationInfo.ebikes;\n  const hasBikes = numberOfBikes > 0;\n\n  if (!hasBikes) return null;\n\n  return <Marker type=\"bike\" size={numberOfBikes * 1.5} selected={selected} />;\n};\n\nexport default Bikes;\n","import { useSpring, animated } from 'react-spring';\nimport Station from './Station';\nimport Bikes from './Bikes';\n\nconst StationMarker = ({\n  station,\n  selected,\n  setSelectedStation,\n  showElectricBikes\n}) => {\n  const style = useSpring({\n    config: { friction: 3, tension: 200 },\n    transform: 'scale(1.1)',\n    from: { transform: 'scale(1)' }\n  });\n\n  return (\n    <animated.div\n      style={style}\n      onClick={() => {\n        setSelectedStation(station);\n      }}\n    >\n      <Station\n        selected={selected}\n        stationInfo={station}\n        showElectricBikes={showElectricBikes}\n      />\n      <Bikes\n        selected={selected}\n        stationInfo={station}\n        showElectricBikes={showElectricBikes}\n      />\n    </animated.div>\n  );\n};\n\nexport default StationMarker;\n","import { useSpring, animated } from 'react-spring';\nimport Marker from './Marker';\n\nconst LocationMarker = () => {\n  const style = useSpring({\n    config: { friction: 0, tension: 5 },\n    transform: 'scale(1.1)',\n    from: { transform: 'scale(1)' }\n  });\n\n  return (\n    <animated.div style={style}>\n      <Marker type=\"location\" size=\"16\" />\n    </animated.div>\n  );\n};\n\nexport default LocationMarker;\n","import Marker from './Marker';\n\nconst SearchResultMarker = () => {\n  return <Marker type=\"search\" size=\"16\" />;\n};\n\nexport default SearchResultMarker;\n","import GoogleMapReact from 'google-map-react';\nimport styled from 'styled-components';\nimport secretKeys from '../secrets.json';\nimport mapStyles from './mapStyles.json';\nimport StationMarker from '../Markers/StationMarker';\nimport LocationMarker from '../Markers/LocationMarker';\nimport SearchResultMarker from '../Markers/SearchResultMarker';\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 100%;\n`;\n\nconst mapOptions = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  clickableIcons: false,\n  gestureHandling: 'greedy'\n};\n\nconst Map = ({\n  center,\n  zoom,\n  stations,\n  selectedStation,\n  setSelectedStation,\n  showLocation,\n  location,\n  searchLocation,\n  showElectricBikes\n}) => (\n  <Wrapper>\n    <GoogleMapReact\n      bootstrapURLKeys={{ key: secretKeys.apiKey }}\n      center={center}\n      zoom={zoom}\n      options={mapOptions}\n    >\n      {stations &&\n        stations.map((station, i) => (\n          <StationMarker\n            key={i}\n            station={station}\n            lat={station.lat}\n            lng={station.lng}\n            selected={station === selectedStation}\n            setSelectedStation={setSelectedStation}\n            showElectricBikes={showElectricBikes}\n          />\n        ))}\n      {showLocation && <LocationMarker lat={location.lat} lng={location.lng} />}\n      {searchLocation && (\n        <SearchResultMarker lat={searchLocation.lat} lng={searchLocation.lng} />\n      )}\n    </GoogleMapReact>\n  </Wrapper>\n);\n\nexport default Map;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n`;\n\nconst Close = ({ onClose }) => (\n  <Wrapper onClick={onClose} role=\"button\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10 10\">\n      <path\n        d=\"M 0,0 L 10,10 M 10,0 L 0,10\"\n        stroke=\"#000\"\n        strokeWidth=\"1\"\n        vectorEffect=\"non-scaling-stroke\"\n      />\n    </svg>\n  </Wrapper>\n);\n\nexport default Close;\n","import styled from 'styled-components';\nimport Close from './Close';\n\nconst StationInfoWrapper = styled.div`\n  width: calc(100vw - 40px);\n  padding: 20px;\n  font-size: 16px;\n  position: absolute;\n  bottom: 0;\n  background-color: #fff;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: top;\n`;\n\nconst StationName = styled.h1`\n  font-size: 16px;\n  margin-top: 0;\n`;\n\nconst StationDetail = styled.div`\n  font-weight: 100;\n`;\n\nconst DirectionsButton = styled.a`\n  text-transform: uppercase;\n  float: right;\n  color: #00d390;\n  cursor: pointer;\n`;\n\nconst StationInfo = ({\n  selectedStation,\n  setSelectedStation,\n  setShowTravelModeSelection\n}) => (\n  <StationInfoWrapper>\n    <Header>\n      <StationName>{selectedStation.name}</StationName>\n      <Close onClose={() => setSelectedStation(null)} />\n    </Header>\n    <StationDetail>{`🔧 mechanical: ${selectedStation.mechanicalBikes}`}</StationDetail>\n    <StationDetail>{`⚡️ electric: ${selectedStation.ebikes}`}</StationDetail>\n    <StationDetail>{`🆓 spaces: ${selectedStation.availableDocks}`}</StationDetail>\n    <DirectionsButton\n      onClick={() => setShowTravelModeSelection(true)}\n      role=\"button\"\n    >\n      directions\n    </DirectionsButton>\n  </StationInfoWrapper>\n);\n\nexport default StationInfo;\n","import styled from 'styled-components';\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng\n} from 'use-places-autocomplete';\nimport Close from './Close';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #fff;\n`;\n\nconst CloseButtonWrapper = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n`;\n\nconst Input = styled.input`\n  font-family: 'Roboto', sans-serif;\n  font-size: 22px;\n  margin-top: 52px;\n  margin-left: 40px;\n  outline: none;\n  border: none;\n  caret-color: #000;\n  padding-left: 0;  \n}\n`;\n\nconst List = styled.ul`\n  list-style-type: none;\n`;\n\nconst ListItem = styled.li`\n  margin-bottom: 16px;\n  cursor: pointer;\n`;\n\nconst Name = styled.span`\n  font-weight: 400;\n`;\n\nconst Address = styled.span`\n  font-weight: 100;\n`;\n\nconst NoSearchResult = styled.div`\n  font-size: 40px;\n  display: flex;\n  justify-content: center;\n  margin-top: 52px;\n`;\n\nconst Search = ({ setShowSearch, setSearchLocation, setZoom }) => {\n  const {\n    value,\n    suggestions: { status, data },\n    setValue\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: new window.google.maps.LatLng({ lat: 41.39, lng: 2.17 }),\n      radius: 5000\n    },\n    debounce: 300\n  });\n  const showAutocomplete = status === 'OK';\n  const hasNoSearchResult = status === 'ZERO_RESULTS';\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = ({ description }) => async () => {\n    try {\n      const geoCode = await getGeocode({ address: description });\n      const latLng = await getLatLng(geoCode[0]);\n      const { lat, lng } = latLng;\n\n      setSearchLocation({ lat, lng });\n      setShowSearch(false);\n      setZoom(17);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <CloseButtonWrapper>\n        <Close onClose={() => setShowSearch(false)} />\n      </CloseButtonWrapper>\n      <Input\n        type=\"text\"\n        autoFocus\n        placeholder=\"search places\"\n        value={value}\n        onChange={handleChange}\n      />\n      {showAutocomplete && (\n        <List>\n          {data.map(suggestion => {\n            const {\n              id,\n              structured_formatting: {\n                main_text: name,\n                secondary_text: address\n              }\n            } = suggestion;\n\n            return (\n              <ListItem key={id} onClick={handleSelect(suggestion)}>\n                <Name>{name}</Name> <Address>{address}</Address>\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n      {hasNoSearchResult && (\n        <NoSearchResult>\n          <span role=\"img\" aria-label=\"crying cat face\">\n            😿\n          </span>\n        </NoSearchResult>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Search;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fff;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 20px;\n  right: 20px;\n  cursor: pointer;\n`;\n\nconst LocationButton = ({ setLocation, setZoom, setShowLocation }) => {\n  const getLocation = () =>\n    new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n\n  const handleClick = async () => {\n    try {\n      const {\n        coords: { latitude: lat, longitude: lng }\n      } = await getLocation();\n      const location = { lat, lng };\n\n      setLocation(location);\n      setZoom(17);\n      setShowLocation(true);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Wrapper onClick={handleClick} role=\"button\">\n      <span role=\"img\" aria-label=\"locate\">\n        📌\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default LocationButton;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fff;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 80px;\n  right: 20px;\n  cursor: pointer;\n`;\n\nconst SearchButton = ({ setShowSearch }) => {\n  return (\n    <Wrapper role=\"button\" onClick={() => setShowSearch(true)}>\n      <span role=\"img\" aria-label=\"search\">\n        🔍\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default SearchButton;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fff;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n`;\n\nconst MechanicalBikeWrapper = styled.div`\n  transform: translate(10px);\n`;\n\nconst ElectricBikeWrapper = styled.div`\n  transform: translate(-10px);\n`;\n\nconst BikeTypeToggle = ({ showElectricBikes, setShowElectricBikes }) => {\n  const toggleBikeType = () => {\n    setShowElectricBikes(!showElectricBikes);\n  };\n\n  const MechanicalBikeIcon = () => (\n    <span role=\"img\" aria-label=\"mechanical\">\n      🔧\n    </span>\n  );\n\n  const ElectricBikeIcon = () => (\n    <span role=\"img\" aria-label=\"electric\">\n      ⚡️\n    </span>\n  );\n\n  return (\n    <Wrapper role=\"button\" onClick={toggleBikeType}>\n      {showElectricBikes ? (\n        <ElectricBikeIcon />\n      ) : (\n        <>\n          <MechanicalBikeWrapper>\n            <MechanicalBikeIcon />\n          </MechanicalBikeWrapper>\n          <ElectricBikeWrapper>\n            <ElectricBikeIcon />\n          </ElectricBikeWrapper>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default BikeTypeToggle;\n","import styled from 'styled-components';\nimport { useSpring, animated } from 'react-spring';\n\nconst Wrapper = styled(animated.div)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  height: -webkit-fill-available;\n  font-size: 60px;\n`;\n\nconst Loader = () => {\n  const style = useSpring({\n    config: { friction: 0, tension: 5 },\n    opacity: 0.5,\n    from: { opacity: 1 }\n  });\n\n  return (\n    <Wrapper style={style}>\n      <span role=\"img\" aria-label=\"bike\">\n        🚲\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport Close from './Close';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  height: -webkit-fill-available;\n  background-color: #fff;\n`;\n\nconst CloseButtonWrapper = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n`;\n\nconst ButtonContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  height: -webkit-fill-available;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Button = styled.a`\n  font-size: 60px;\n  margin-right: ${props => (props.spacer ? '52px' : '0')};\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nconst TravelModeSelection = ({\n  selectedStation: { lat, lng },\n  setShowTravelModeSelection\n}) => {\n  const getUrl = mode =>\n    `https://www.google.com/maps/dir/?api=1&destination=${lat}%2C${lng}&travelmode=${mode}`;\n\n  return (\n    <Wrapper>\n      <CloseButtonWrapper>\n        <Close onClose={() => setShowTravelModeSelection(false)} />\n      </CloseButtonWrapper>\n      <ButtonContainer>\n        <Button href={getUrl('walking')} spacer>\n          <span role=\"img\" aria-label=\"walking\">\n            🚶🏻‍♂\n          </span>\n        </Button>\n        <Button href={getUrl('bicycling')}>\n          <span role=\"img\" aria-label=\"biking\">\n            🚴🏻‍♂️\n          </span>\n        </Button>\n      </ButtonContainer>\n    </Wrapper>\n  );\n};\n\nexport default TravelModeSelection;\n","import { useState, useEffect } from 'react';\n\nconst useStations = () => {\n  const [stations, setStations] = useState([]);\n\n  useEffect(() => {\n    getStations();\n  }, []);\n\n  const getStations = async () => {\n    try {\n      const stationInfoResponse = await fetch(\n        'https://api.bsmsa.eu/ext/api/bsm/gbfs/v2/en/station_information'\n      );\n      const stationInfoData = await stationInfoResponse.json();\n      const stationInfo = stationInfoData.data.stations.map(station => ({\n        id: station.station_id,\n        name: station.name,\n        lat: station.lat,\n        lng: station.lon\n      }));\n\n      const stationStatusResponse = await fetch(\n        'https://api.bsmsa.eu/ext/api/bsm/gbfs/v2/en/station_status'\n      );\n      const stationStatusData = await stationStatusResponse.json();\n      const stationStatus = stationStatusData.data.stations.map(station => ({\n        id: station.station_id,\n        mechanicalBikes: station.num_bikes_available_types.mechanical,\n        ebikes: station.num_bikes_available_types.ebike,\n        availableDocks: station.num_docks_available,\n        capacity: station.num_bikes_available + station.num_docks_available,\n        status: station.status\n      }));\n\n      const stationData = stationInfo\n        .map(info => ({\n          ...stationStatus.find(status => status.id === info.id),\n          ...info\n        }))\n        .filter(station => station.status === 'IN_SERVICE');\n\n      setStations(stationData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return stations;\n};\n\nexport default useStations;\n","import { useState, useEffect } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Map from '../Map/Map';\nimport StationInfo from '../StationInfo';\nimport Search from '../Search';\nimport LocationButton from '../LocationButton';\nimport SearchButton from '../SearchButton';\nimport BikeTypeToggle from '../BikeTypeToggle';\nimport Loader from '../Loader';\nimport TravelModeSelection from '../TravelModeSelection';\nimport useStations from './useStations';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: 'Roboto', sans-serif;\n  }\n`;\n\nconst App = () => {\n  const stations = useStations();\n  const [selectedStation, setSelectedStation] = useState(null);\n  const [showLocation, setShowLocation] = useState(false);\n  const [showSearch, setShowSearch] = useState(false);\n  const [showTravelModeSelection, setShowTravelModeSelection] = useState(false);\n  const [center, setCenter] = useState({\n    lat: 41.39,\n    lng: 2.17\n  });\n  const [location, setLocation] = useState(null);\n  const [searchLocation, setSearchLocation] = useState(null);\n  const [showElectricBikes, setShowElectricBikes] = useState(false);\n  const [zoom, setZoom] = useState(13.5);\n  const isLoading = stations.length === 0;\n\n  useEffect(() => {\n    if (location) {\n      setCenter(location);\n    }\n  }, [location]);\n\n  useEffect(() => {\n    if (searchLocation) {\n      setCenter(searchLocation);\n    }\n  }, [searchLocation]);\n\n  if (isLoading) return <Loader />;\n\n  return (\n    <>\n      <Map\n        stations={stations}\n        selectedStation={selectedStation}\n        setSelectedStation={setSelectedStation}\n        center={center}\n        zoom={zoom}\n        showLocation={showLocation}\n        location={location}\n        searchLocation={searchLocation}\n        showElectricBikes={showElectricBikes}\n      />\n      <BikeTypeToggle\n        showElectricBikes={showElectricBikes}\n        setShowElectricBikes={setShowElectricBikes}\n      />\n      <SearchButton setShowSearch={setShowSearch} />\n      <LocationButton\n        setLocation={setLocation}\n        setZoom={setZoom}\n        setShowLocation={setShowLocation}\n      />\n      {selectedStation && (\n        <StationInfo\n          selectedStation={selectedStation}\n          setSelectedStation={setSelectedStation}\n          setShowTravelModeSelection={setShowTravelModeSelection}\n        />\n      )}\n      {showSearch && (\n        <Search\n          setShowSearch={setShowSearch}\n          setSearchLocation={setSearchLocation}\n          setZoom={setZoom}\n        />\n      )}\n      {showTravelModeSelection && (\n        <TravelModeSelection\n          selectedStation={selectedStation}\n          setShowTravelModeSelection={setShowTravelModeSelection}\n        />\n      )}\n      <GlobalStyle />\n    </>\n  );\n};\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}