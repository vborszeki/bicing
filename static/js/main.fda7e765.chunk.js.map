{"version":3,"sources":["Markers/Marker.js","Markers/Station.js","Markers/Bikes.js","Markers/StationMarker.js","Markers/LocationMarker.js","Map/Map.js","StationInfo/Close.js","StationInfo/StationInfo.js","LocationButton.js","Loader.js","App/useStations.js","App/App.js","serviceWorker.js","index.js"],"names":["styles","station","color","opacity","zIndex","bike","location","Marker","styled","div","_templateObject","props","size","type","Station","_ref","stationInfo","react_default","a","createElement","Markers_Marker","capacity","Bikes","mechanicalBikes","ebikes","StationMarker","setSelectedStation","style","useSpring","config","friction","tension","transform","from","web","onClick","Markers_Station","Markers_Bikes","LocationMarker","Wrapper","Map_templateObject","mapOptions","mapStyles","disableDefaultUI","clickableIcons","gestureHandling","Map","center","zoom","stations","showLocation","lib_default","bootstrapURLKeys","key","secretKeys","apiKey","options","map","i","Markers_StationMarker","lat","lng","Markers_LocationMarker","Close_templateObject","Close","Close_Wrapper","xmlns","viewBox","d","stroke","strokeWidth","vectorEffect","StationInfoWrapper","StationInfo_templateObject","StationName","h1","_templateObject2","StationDetail","_templateObject3","Header","_templateObject4","StationInfo","selectedStation","name","StationInfo_Close","concat","availableDocks","LocationButton_templateObject","LocationButton","setLocation","setZoom","setShowLocation","handleClick","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","_yield$getLocation","_yield$getLocation$co","wrap","_context","prev","next","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","sent","coords","latitude","longitude","t0","console","error","stop","apply","this","arguments","LocationButton_Wrapper","role","aria-label","animated","Loader_templateObject","Loader","Loader_Wrapper","useStations","_useState","useState","_useState2","slicedToArray","setStations","useEffect","getStations","stationInfoResponse","stationInfoData","stationStatusResponse","stationStatusData","stationStatus","stationData","fetch","json","data","id","station_id","lon","num_bikes_available_types","mechanical","ebike","num_docks_available","status","info","objectSpread2","find","GlobalStyle","createGlobalStyle","App_templateObject","App","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","length","src_Loader","Fragment","src_Map_Map","src_LocationButton","src_StationInfo_StationInfo","Boolean","window","hostname","match","ReactDOM","render","src_App_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fda7e765.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst styles = {\n  station: { color: '#fa424c', opacity: 0.4, zIndex: 1 },\n  bike: { color: 'transparent', opacity: 1, zIndex: 0 },\n  location: { color: '#694ffe', opacity: 1, zIndex: 2 },\n};\n\nconst Marker = styled.div`\n  position: absolute;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  left: ${(props) => props.size / -2}px;\n  top: ${(props) => props.size / -2}px;\n  border: 1px solid\n    ${(props) =>\n      props.type === 'location' ? styles.location.color : styles.station.color};\n  border-radius: ${(props) => props.size}px;\n  background-color: ${(props) => styles[props.type].color};\n  opacity: ${(props) => styles[props.type].opacity};\n  z-index: ${(props) => styles[props.type].zIndex};\n  cursor: pointer;\n`;\n\nexport default Marker;\n","import React from 'react';\nimport Marker from './Marker';\n\nconst Station = ({ stationInfo }) => (\n  <Marker type=\"station\" size={stationInfo.capacity * 1.5} />\n);\n\nexport default Station;\n","import React from 'react';\nimport Marker from './Marker';\n\nconst Bikes = ({ stationInfo }) => {\n  const hasBikes = stationInfo.mechanicalBikes + stationInfo.ebikes > 0;\n\n  return hasBikes ? (\n    <Marker\n      type=\"bike\"\n      size={(stationInfo.mechanicalBikes + stationInfo.ebikes) * 1.5}\n    />\n  ) : null;\n};\n\nexport default Bikes;\n","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport Station from './Station';\nimport Bikes from './Bikes';\n\nconst StationMarker = ({ station, setSelectedStation }) => {\n  const style = useSpring({\n    config: { friction: 3, tension: 200 },\n    transform: 'scale(1.1)',\n    from: { transform: 'scale(1)' }\n  });\n\n  return (\n    <animated.div\n      style={style}\n      onClick={() => {\n        setSelectedStation(station);\n      }}\n    >\n      <Station stationInfo={station} />\n      <Bikes stationInfo={station} />\n    </animated.div>\n  );\n};\n\nexport default StationMarker;\n","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport Marker from './Marker';\n\nconst LocationMarker = () => {\n  const style = useSpring({\n    config: { friction: 0, tension: 5 },\n    transform: 'scale(1.1)',\n    from: { transform: 'scale(1)' },\n  });\n\n  return (\n    <animated.div style={style}>\n      <Marker type=\"location\" size=\"16\" />\n    </animated.div>\n  );\n};\n\nexport default LocationMarker;\n","import React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport styled from 'styled-components';\nimport secretKeys from '../secrets.json';\nimport mapStyles from './mapStyles.json';\nimport StationMarker from '../Markers/StationMarker';\nimport LocationMarker from '../Markers/LocationMarker';\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 100%;\n`;\n\nconst mapOptions = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  clickableIcons: false,\n  gestureHandling: 'greedy',\n};\n\nconst Map = ({\n  center,\n  zoom,\n  stations,\n  setSelectedStation,\n  showLocation,\n  location,\n}) => (\n  <Wrapper>\n    <GoogleMapReact\n      bootstrapURLKeys={{ key: secretKeys.apiKey }}\n      center={center}\n      zoom={zoom}\n      options={mapOptions}\n    >\n      {stations &&\n        stations.map((station, i) => (\n          <StationMarker\n            key={i}\n            station={station}\n            lat={station.lat}\n            lng={station.lng}\n            setSelectedStation={setSelectedStation}\n          />\n        ))}\n      {showLocation && <LocationMarker lat={location.lat} lng={location.lng} />}\n    </GoogleMapReact>\n  </Wrapper>\n);\n\nexport default Map;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 20px;\n  height: 20px;\n`;\n\nconst Close = ({ setSelectedStation }) => (\n  <Wrapper onClick={() => setSelectedStation(null)}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10 10\">\n      <path\n        d=\"M 0,0 L 10,10 M 10,0 L 0,10\"\n        stroke=\"#000\"\n        strokeWidth=\"1\"\n        vectorEffect=\"non-scaling-stroke\"\n      />\n    </svg>\n  </Wrapper>\n);\n\nexport default Close;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Close from './Close';\n\nconst StationInfoWrapper = styled.div`\n  padding: 20px;\n  font-size: 16px;\n  position: absolute;\n  bottom: 0;\n  width: 100vw;\n  background-color: #fff;\n`;\n\nconst StationName = styled.h1`\n  font-size: 16px;\n  margin-top: 0;\n`;\n\nconst StationDetail = styled.div`\n  font-weight: 100;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: top;\n  width: calc(100vw - 40px);\n`;\n\nconst StationInfo = ({ selectedStation, setSelectedStation }) => (\n  <StationInfoWrapper>\n    <Header>\n      <StationName>{selectedStation.name}</StationName>\n      <Close setSelectedStation={setSelectedStation} />\n    </Header>\n    <StationDetail>{`🔧 mechanical: ${selectedStation.mechanicalBikes}`}</StationDetail>\n    <StationDetail>{`⚡️ electric: ${selectedStation.ebikes}`}</StationDetail>\n    <StationDetail>{`🆓 spaces: ${selectedStation.availableDocks}`}</StationDetail>\n  </StationInfoWrapper>\n);\n\nexport default StationInfo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fff;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 20px;\n  right: 20px;\n  cursor: pointer;\n`;\n\nconst LocationButton = ({ setLocation, setZoom, setShowLocation }) => {\n  const getLocation = () =>\n    new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n\n  const handleClick = async () => {\n    try {\n      const {\n        coords: { latitude: lat, longitude: lng },\n      } = await getLocation();\n      const location = { lat, lng };\n\n      setLocation(location);\n      setZoom(17);\n      setShowLocation(true);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Wrapper onClick={handleClick} role=\"button\">\n      <span role=\"img\" aria-label=\"locate\">\n        📌\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default LocationButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSpring, animated } from 'react-spring';\n\nconst Wrapper = styled(animated.div)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  font-size: 60px;\n`;\n\nconst Loader = () => {\n  const style = useSpring({\n    config: { friction: 0, tension: 5 },\n    opacity: 0.5,\n    from: { opacity: 1 },\n  });\n\n  return (\n    <Wrapper style={style}>\n      <span role=\"img\" aria-label=\"bike\">\n        🚲\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default Loader;\n","import { useState, useEffect } from 'react';\n\nconst useStations = () => {\n  const [stations, setStations] = useState([]);\n\n  useEffect(() => {\n    getStations();\n  }, []);\n\n  const getStations = async () => {\n    try {\n      const stationInfoResponse = await fetch(\n        'https://api.bsmsa.eu/ext/api/bsm/gbfs/v2/en/station_information'\n      );\n      const stationInfoData = await stationInfoResponse.json();\n      const stationInfo = stationInfoData.data.stations.map((station) => ({\n        id: station.station_id,\n        name: station.name,\n        lat: station.lat,\n        lng: station.lon,\n        capacity: station.capacity,\n      }));\n\n      const stationStatusResponse = await fetch(\n        'https://api.bsmsa.eu/ext/api/bsm/gbfs/v2/en/station_status'\n      );\n      const stationStatusData = await stationStatusResponse.json();\n      const stationStatus = stationStatusData.data.stations.map((station) => ({\n        id: station.station_id,\n        mechanicalBikes: station.num_bikes_available_types.mechanical,\n        ebikes: station.num_bikes_available_types.ebike,\n        availableDocks: station.num_docks_available,\n        status: station.status,\n      }));\n\n      const stationData = stationInfo.map((info) => ({\n        ...stationStatus.find((status) => status.id === info.id),\n        ...info,\n      }));\n      // .filter((station) => station.status === 'IN_SERVICE');\n\n      setStations(stationData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return stations;\n};\n\nexport default useStations;\n","import React, { useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Map from '../Map/Map';\nimport StationInfo from '../StationInfo/StationInfo';\nimport LocationButton from '../LocationButton';\nimport Loader from '../Loader';\nimport useStations from './useStations';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: 'Roboto', sans-serif;\n  }\n`;\n\nconst App = () => {\n  const stations = useStations();\n  const [selectedStation, setSelectedStation] = useState(null);\n  const [showLocation, setShowLocation] = useState(false);\n  const [location, setLocation] = useState({\n    lat: 41.39,\n    lng: 2.17,\n  });\n  const [zoom, setZoom] = useState(13.5);\n  const isLoading = stations.length === 0;\n\n  if (isLoading) return <Loader />;\n\n  return (\n    <>\n      <Map\n        stations={stations}\n        setSelectedStation={setSelectedStation}\n        center={location}\n        zoom={zoom}\n        showLocation={showLocation}\n        location={location}\n      />\n      <LocationButton\n        setLocation={setLocation}\n        setZoom={setZoom}\n        setShowLocation={setShowLocation}\n      />\n      {selectedStation && (\n        <StationInfo\n          selectedStation={selectedStation}\n          setSelectedStation={setSelectedStation}\n        />\n      )}\n      <GlobalStyle />\n    </>\n  );\n};\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}